//============================================================================
// Name        : scheduler.cpp
// Author      : YoucefKhaled
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include <stdlib.h>
#include <vector>
#include <iterator>

//#include <libnova/julian_day.h>
//#include <solar.h>
//#include <rise_set.h>
#include <libnova/libnova.h>

#include <pagmo.h>
#include <config.h>
#include <serialization.h>
#include <types.h>
#include <problem/base.h>

#include "../Model/Observation.h"
#include "../Model/Schedule.h"
#include "../Model/Request.h"

#include "../genethic_algo/SchedulingProb.h"
#include "../genethic_algorithm/chromosome.h"


using namespace std;


int main() {

	Target vega(279.2347, 38.7836);
	Target kochab(222.676375, 74.1555);
	ln_equ_posn * pos = new ln_equ_posn();
	pos = vega.getEqCord();
	cout << kochab.getAngularDistance(pos) << endl;

	Schedule * sched = new Schedule();

	sched->randomObservationListGenerator(20);

	sched->checkObservations();

	chromosome * ch = new chromosome(sched->getObs());

	cout << sched->getObs().at(0).getObsId() << endl;

	cout << "fknfi," << endl;

	ch->compute_obj_func();

	cout << "fknfi," << endl;
	cout << fixed << ch->get_obj_func(0) << endl;
	cout << fixed << ch->get_obj_func(1) << endl;
	cout << fixed << ch->get_obj_func(2) << endl;
	cout << fixed << ch->get_obj_func(3) << endl;

//
//	Target RigilKentaurus(219.8795833, -60.81952778);
//
//	Target * Aldebaran = new Target(68.98041667, 16.50841667);

	return 0;
}

