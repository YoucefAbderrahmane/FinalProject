/*
 * population.cpp
 *
 *  Created on: 16 juil. 2016
 *      Author: root
 */

#include "population.h"
#include <time.h>

population::population(int population_size) : individuals(), population_size(population_size),
		champion()
{
	// TODO Auto-generated constructor stub
	this->individuals.resize(population_size);
}

population::population(std::vector<chromosome> individuals, int population_size) : individuals(individuals),
		population_size(population_size), champion()
{
	// TODO Auto-generated constructor stub
	this->individuals = individuals;
}

population::~population() {
	// TODO Auto-generated destructor stub
}

void population::init() {

	srand(time(NULL));

	//initialize all individuals of the population
	for(std::vector<chromosome>::size_type i = 0; i < individuals.size(); i++){

		init_individual(i);
	}
}

void population::init_individual(int index) {

	//initialize the genes of the chromosome
	for(std::vector<gene>::size_type i = 0; i < individuals[index].genes.size(); i++){

		init_gene(i);
	}
}

void population::init_gene(int index) {

	double inf = 0.0;	//the lower bound for the random number
	double sup = 0.0;	//the upper bound for the random number
	double range = 0.0; //needs to be equal to: sup - inf

	//generate the probability of selecting the observation
	sup = 1.0

	//generate a random start date within the night horizon

	//randomly chose the allocated telescope
}
