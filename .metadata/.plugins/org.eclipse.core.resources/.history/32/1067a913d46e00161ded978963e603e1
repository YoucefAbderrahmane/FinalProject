/*
 * MyNSGA.cpp
 *
 *  Created on: 12 juil. 2016
 *      Author: root
 */

#include "MyNSGA.h"

MyNSGA::MyNSGA() {
	// TODO Auto-generated constructor stub

}

MyNSGA::~MyNSGA() {
	// TODO Auto-generated destructor stub
}

chromosome MyNSGA::tournamentSelection() {
	chromosome cr;
		return cr;
}

chromosome MyNSGA::tournamentSelection(int individu1, int individu2, population p)
{
	chromosome x;
	return x;
}

void MyNSGA::nsga2(population *p)
{
	int NP = p->get_size();
	std::vector<int> v1(NP), v2(NP);
	chromosome prent1, parent2, enfant1, enfant2;
	for(int i=0;i < NP; i++)
	{
		v1[i] = i;
		v2[i] = i;
	}
	for(int g =0; g< this->nb_gen; g++)
	{
		p->update_pareto_information(); // update fronts and ranks
		std::vector<chromosome> cr = p->getIndividuals(); //Initialization de R
		std::random_shuffle(v1.begin(),v1.end()); //shuffle the vectors to pick the parents randomly
		std::random_shuffle(v2.begin(),v2.end());
		//unsigned seed = std::
		for(int i =0; i < NP; i+=4)
		{
			parent1 = tournamentSelection(v1[i],v2[i+1],*p);
		}
	}
}
